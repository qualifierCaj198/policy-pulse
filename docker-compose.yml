version: "3.9"
services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-policy_pulse}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-strong_db_password}
      POSTGRES_DB: ${POSTGRES_DB:-policy_pulse}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: ./backend
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRE_MIN: ${JWT_EXPIRE_MIN:-43200}
      JWT_ALG: ${JWT_ALG:-HS256}
      FERNET_KEY: ${FERNET_KEY}
      CORS_ALLOW_ORIGINS: ${CORS_ALLOW_ORIGINS:-*}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"

  web:
    image: nginx:1.27-alpine
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    ports:
      - "80:80"
volumes:
  db_data:
