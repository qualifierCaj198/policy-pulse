name: Deploy to Vultr

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VULTR_HOST }}
          username: ${{ secrets.VULTR_USER }}   # e.g. root
          password: ${{ secrets.VULTR_PASS }}  # you said you're using password auth
          port: ${{ secrets.VULTR_PORT || 22 }}
          script_stop: true
          debug: true
          command_timeout: 30m
          script: |
            set -euxo pipefail
            echo "==> Preflight: ensure deps"
            if ! command -v docker >/dev/null 2>&1; then
              curl -fsSL https://get.docker.com | sh
            fi
            if ! docker compose version >/dev/null 2>&1; then
              DOCKER_CONFIG=${HOME}/.docker
              mkdir -p $DOCKER_CONFIG/cli-plugins
              curl -SL https://github.com/docker/compose/releases/download/v2.29.7/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
              chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
            fi

            echo "==> Ensure app folder"
            APP_DIR=/opt/policy-pulse
            REPO_URL="https://github.com/qualifierCaj198/policy-pulse.git"
            if [ ! -d "$APP_DIR" ]; then
              mkdir -p "$APP_DIR"
              git clone "$REPO_URL" "$APP_DIR"
            fi

            echo "==> Sync repo"
            cd "$APP_DIR"

            # If it's not a git repo (e.g. previous copied files), initialize and set remote
            if [ ! -d .git ]; then
              git init
              git remote add origin "$REPO_URL" || git remote set-url origin "$REPO_URL"
              git fetch origin
              git checkout -b main || true
            fi

            # Fetch and hard reset to remote main to avoid local-dirty failures
            git fetch origin
            git checkout main || git checkout -b main
            git reset --hard origin/main

            echo "==> Show compose and env"
            test -f docker-compose.yml
            test -f .env || true
            ls -la

            echo "==> Build + up"
            docker compose pull || true
            docker compose build api
            docker compose up -d web db api

            echo "==> Health check"
            sleep 2
            curl -sf http://localhost/api/healthz || (docker logs --tail=200 policy-pulse-api-1 && exit 1)

            echo "==> Done"
